menuServer(菜单管理)

1.组织  menuOrganizations
 /api/v1/menuOrganizations                                       post:create  get:list
 /api/v1/menuOrganizations/:menuOrganizationUUID                 post:update  get:retrieve  
 
 
2.菜单分组   menuGroups
 /api/v1/menuOrganizations/:menuOrganizationUUID/menuGroups                                post:create  get:list
 /api/v1/menuOrganizations/:menuOrganizationUUID/menuGroups/:menuGroupUUID                 post:update  get:retrieve 
 
 
3.菜单 menus 
 /api/v1/menuOrganizations/:menuOrganizationUUID/menuGroups/:menuGroupUUID/menus/                                 post:create  get:list
 /api/v1/menuOrganizations/:menuOrganizationUUID/menuGroups/:menuGroupUUID/menus/:menuUUID                        post:update  get:retrieve 
 
 
4.操作   operators
 /api/v1/menuOrganizations/:menuOrganizationUUID/menuGroups/:menuGroupUUID/menus/:menuUUID/operators                   post:create  get:list
 /api/v1/menuOrganizations/:menuOrganizationUUID/menuGroups/:menuGroupUUID/menus/:menuUUID/operators/:operatorUUID     post:update  get:retrieve 


 

业务接口

  1.批量更新菜单所属的分组                                        ok
  
  2.获取角色下的菜单和操作权限列表，按照菜单目录树形结构返回。    ok
  
  3.获取用户列表下的角色名称，账号信息。                          ok             
  
  4.创建用户时，同时创建账号，更新用户的角色。                    ok
  
  5.更新用户时，同时更新用户的角色。                              ok
  
  6.删除用户时，同时删除用户的角色。                              ok
  
  7.用户，账号，角色，做graphql                                   ok
  
  8.菜单分组，菜单，操作，做graphql                               ok
  
  9.文件服务器 ，菜单图标的素材库。
  
  10.同步系统菜单                                                 ok
  
  {
    applicationName:'',
    version:'1.0.0',
    menus:[
         {
         name:
         menuId:
         operations:
         [
          {
            name:
            operatorId:
          }
         ]
         }
       ]
  }
  
  11、支持菜单别名                                            ok
  12、权限引用                                                ok
  
  13、获取角色下的用户数。                                    ok
  14、创建角色权限时，支持使用UUID来创建。                    ok
  15、认证组件在网关中去掉JWT，透传。                         ok
  16、删除菜单时，同时删除操作。                              ok                            
  17. 批量删除菜单的接口。                                    ok
	18. 列表出某个应用下还没有分配菜单的元菜单。                ok
	request:
	{
	  applicationHref:'',
	  ownerHref:'',
	}
	
	response:
	{
	  size:
	  items:
	  [metaMenusObj]
	}
	
	
  
  1、菜单组织增加ownerUUID，实现多种类型映射 (区别app与业态)
	2、增加菜单别名资源 
	3、菜单与分组的关系，使用membership表改进为多对多 
	4、角色增加ownerUUID,，实现多种类型映射(区分岗位，业态，app,商户) 
	5、用户组件，新增岗位资源
	6、角色的权限中去掉应用链接，应用UUID.

 
  
  // 初始（莱客平台）
1 初始商户 
2 初始系统 (写死名字)
3.初始菜单
3 初始角色 (写死UUID)
4 初始管理员账号  (商户号,系统UUID)
5 初始管理员用户 （账户href）
6 用户绑定角色    (用户，角色)


// 创建商户类型角色
1 创建角色 (根据商户类型，模板)

// 注册商户（莱客平台）
1 创建商户 
2 创建商户管理员账号 (商户号,系统UUID)
5 创建商户管理员用户 （账户href）
6 用户绑定商户的管理员角色 (用户，角色)


// 注册用户（莱客平台）
1 创建账户 (商户号，系统名字)
2 创建用户 (账户)
3 用户绑定角色 (用户，角色)


// 用户登录
1 账户（商户号，账号（用户名、手机号），密码，系统名（写死代码） ）
2 JWT
      商户 -> href,商户号，商户名
      用户 -> href,用户名,
      系统 -> href,系统名，
      
// JWT 更换 old token -> new token    系统间的jwt转换 
   
// 账户退出注销JWT 


query{
      users(options:{offset:0,limit:2,name:"*wensu*"}){
         uuid
         name
        description
        address
        account
        {
          name
          merchantNumber
          mobile
          number
          email
          description
          status
        }
        role
        {
         uuid
         name
         description
         status
          type
        }
      }
}